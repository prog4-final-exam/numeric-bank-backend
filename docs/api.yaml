openapi: 3.0.3
info:
  title: Numeric bank api specs
  description: This document specify the endpoints we'll use for our numeric bank web application
  version: 4.1.0

servers:
  - url: "http://localhost:8080"
tags:
  - name: Dashboard
  - name: Account
  - name: Transaction
  - name: Balance
  - name: Transfer_category
  - name: Transfer

paths:
  ### Dashboard endpoint
  /dashboard/receipt-and-expense:
    get:
      tags:
        - Dashboard
      summary: get total of receipts and expenses
      requestBody:
        $ref: "#/components/requestBodies/SumAndReceiptsBody"
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/SumReceiptsExpenses"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /dashboard/amount-per-category:
    get:
      tags:
        - Dashboard
      summary: get total of income and expense transfer by category
      requestBody:
        $ref: "#/components/requestBodies/SumAmountByCategoryBody"
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/SumAmountByCategory"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"        
    
  ### Account endpoint
  /accounts:
    get:
      tags:
        - Account
      summary: get list of account
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Account
      summary: create new account
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBody"
      responses:
        200:
          description: the created account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    put:
      tags:
        - Account
      summary: update an account
      requestBody:
        $ref: "#/components/requestBodies/UpdateAccountBody"
      responses:
        200:
          description: the updated account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /accounts/{accounId}/statements:
    get:
      tags:
        - Account
      summary: get statement of an given account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/AccountStatement"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"        

  /accounts/{id}:
    get:
      tags:
        - Account
      summary: get account by his id
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the corresponding account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - Account
      summary: delete an account
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the deleted account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  ### Balance endpoint
  /balances:
    get:
      tags:
        - Balance
      summary: get list of balance associated with account
      responses:
        "200":
          description: display the list of the balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    post:
      tags:
        - Balance
      summary: create new balance
      requestBody:
        $ref: "#/components/requestBodies/PostBalanceBody"
      responses:
        200:
          description: the created account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    put:
      tags:
        - Balance
      summary: update a balance
      requestBody:
        $ref: "#/components/requestBodies/UpdateBalanceBody"
      responses:
        "200":
          description: the updated balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /balances/account/{id}:
    get:
      tags:
        - Balance
      summary: get balance by the account_id
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the corresponding balance by the account_id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /account/{idAccount}/balances:
    get:
      tags:
        - Balance
      summary: get balance by the account_id
      description: You van also filter it with the id_balance or balance_datetime
      parameters:
        - $ref: "#/components/parameters/IdAccount"
        - $ref: "#/components/parameters/IdBalance"
        - $ref: "#/components/parameters/BalanceDatetime"
      responses:
        200:
          description: the corresponding balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"        

  /balances/{id}:
    get:
      tags:
        - Balance
      summary: get balance by his id
      parameters:
        - $ref: "#/components/parameters/BalanceId"
      responses:
        200:
          description: the corresponding balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - Balance
      summary: delete a balance
      parameters:
        - $ref: "#/components/parameters/BalanceId"
      responses:
        200:
          description: the deleted balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /transfers/categories:
    get:
      tags:
        - Transfer_category
      summary: get list of transfer's category
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Transfer_category
      summary: create new transfer's category
      requestBody:
        $ref: "#/components/requestBodies/TransferCategoryBody"
      responses:
        200:
          description: the created transfer's category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    put:
      tags:
        - Transfer_category
      summary: update an existent transfer's category
      requestBody:
        $ref: "#/components/requestBodies/UpdateTransferCategoryBody"
      responses:
        200:
          description: the updated transfer's category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /transfers/{idTransfer}/category:
    get:
      tags:
        - Transfer_category
      summary: get transfer's category by the id_transfer
      parameters:
        - $ref: "#/components/parameters/IdTransferPath"
      responses:
        200:
          description: the corresponding category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"        
  /transfers/categories/{id}:
    get:
      tags:
        - Transfer_category
      summary: get transfer's category by his id
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the corresponding account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"        
    delete:
      tags:
        - Transfer_category
      summary: delete a transfer's category
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the deleted transfer's category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"


  /transactions:
    get:
      tags:
        - Transaction
      summary: get list of Transaction
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Transaction
      summary: create new transaction
      requestBody:
        $ref: "#/components/requestBodies/TransactionBody"
      responses:
        200:
          description: the created transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"     
    put:
      tags:
        - Transaction
      summary: update an existent transaction
      requestBody:
        $ref: "#/components/requestBodies/UpdateTransactionBody"
      responses:
        200:
          description: the updated transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 
  /accounts/{idAccount}/transactions:
    get:
      tags:
        - Transaction
      summary: get list of Transaction by the id_account
      description: You can filter it with id of the transaction, transaction_datetime and the transaction_type
      parameters:
        - $ref: '#/components/parameters/IdAccount'
        - $ref: '#/components/parameters/IdTransaction'
        - $ref: '#/components/parameters/TransactionDatetime'
        - $ref: '#/components/parameters/TransactionType'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"              


  /transactions/{id}:
    get:
      tags:
        - Transaction
      summary: get Transaction by his id
      parameters:
        - $ref: "#/components/parameters/TransactionId"
      responses:
        200:
          description: the corresponding Transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 
    delete:
      tags:
        - Transaction
      summary: delete a transaction
      parameters:
        - $ref: "#/components/parameters/TransactionId"
      responses:
        200:
          description: the deleted Transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 

  /transfers:
    get:
      tags:
        - Transfer
      summary: get list of Transfer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Transfer
      summary: create new transfer
      requestBody:
        $ref: "#/components/requestBodies/TransferBody"
      responses:
        200:
          description: the created transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 
    put:
      tags:
        - Transfer
      summary: update an existent transfer
      requestBody:
        $ref: "#/components/requestBodies/UpdateTransferBody"
      responses:
        200:
          description: the updated transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 

  /accounts/{idAccountSource}/transfers:
    get:
      tags:
        - Transfer
      summary: get list of Transfer by the id_account_source
      description: you can filter with the label, reference, transfer_datetime, destination_account_number, or the id of the transfer
      parameters:
        - $ref: '#/components/parameters/IdAccountSource'
        - $ref: '#/components/parameters/Label'
        - $ref: '#/components/parameters/TransferDatetime'
        - $ref: '#/components/parameters/Reference'
        - $ref: '#/components/parameters/DestinationAccountNumber'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"                  

  /transfers/{id}:
    get:
      tags:
        - Transfer
      summary: get Transfer by his id
      parameters:
        - $ref: "#/components/parameters/TransferId"
      responses:
        200:
          description: the corresponding Transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"     
    delete:
      tags:
        - Transfer
      summary: delete a transfer
      parameters:
        - $ref: "#/components/parameters/TransferId"
      responses:
        200:
          description: the deleted Transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"                           

components:
  ### requestBodies components
  requestBodies:
    PostAccountBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/postAccount"
    UpdateAccountBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateAccount"
    PostBalanceBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/postBalance"
    UpdateBalanceBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateBalance"        
    TransferCategoryBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/crudCategory"
    UpdateTransferCategoryBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateCategory"        

    TransactionBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/crudTransaction" 
    UpdateTransactionBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Transaction"  
    SumAndReceiptsBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReceiptsAndExpensesParams" 
    SumAmountByCategoryBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AmountByCategoryParams"                     

    TransferBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/crudTransfer"
    UpdateTransferBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateTransfer"                       

  ### parameters components
  parameters:
    IdAccount:
      name: idAccount
      in: path
      required: true
      schema:
        type: integer
    IdBalance:
      name: idBalance
      in: query
      required: false
      schema:
        type: integer    
    BalanceDatetime:
      name: balanceDatetime
      in: query
      required: false
      schema:
        type: string
        format: datetime  
    IdTransferPath:
      name: idTransfer
      in: path
      required: true
      schema:
        type: integer    
    IdTransaction:
      name: idTransaction
      in: query
      required: false
      schema:
        type: integer    
    TransactionDatetime:
      name: TransactionDatetime
      in: query
      required: false
      schema:
        type: string
        format: datetime       
    TransactionType:
      name: transactionType
      in: query
      required: false
      schema:   
        $ref: '#/components/schemas/transactionType' 
    AccountId:
      name: id
      in: path
      required: true
      schema:
        type: integer
    BalanceId:
      name: id
      in: path
      required: true
      schema:
        type: integer
    TransactionId:
      name: id
      in: path
      required: true
      schema:
        type: integer

    TransferId:
      name: id
      in: path
      required: true
      schema:
        type: integer    
    IdAccountSource:
      name: idAccountSource
      in: path
      required: true
      schema:
        type: integer        
    IdTransferQuery:
      name: idTransfer
      in: query
      required: false
      schema:
        type: integer 
    Label:
      name: label
      in: query
      required: false
      schema:
        type: string 
    TransferDatetime:
      name: transferDatetime
      in: query
      required: false
      schema:
        type: string
        format: datetime  
    Reference:
      name: reference
      in: query
      required: false
      schema:
        type: string 
    DestinationAccountNumber:
      name: destinationAccountNumber
      in: query
      required: false
      schema:
        type: string                  


  ### responses component
  responses:
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestException"
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ForbiddenException"
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceNotFoundException"
    429:
      description: Too many Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TooManyRequestsException"
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerException"

  ### schemas components
  schemas:
    CommonId:
      type: object
      properties:
        id:
          type: integer
          format: int64
    accountUtils:
      type: object
      properties:
        firstname:
          type: string
          description: User's firstname
        lastname:
          type: string
          description: User's lastname  
        net_monthly_pay:
          type: number
          format: double
          description: User's net month salary        
    updateAccount:    
      allOf:
        - $ref: '#/components/schemas/CommonId'
        - $ref: '#/components/schemas/accountUtils'

    postAccount:
      allOf:
        - $ref: '#/components/schemas/accountUtils'
      type: object
      properties:        
        birthdate:
          type: string
          format: date
          description: User's birthday
      required:
        - birthdate

    account:
      allOf:
        - $ref: "#/components/schemas/CommonId"
        - $ref: "#/components/schemas/accountUtils"
      type: object
      properties:
        birthdate:
          type: string
          format: date
          description: User's birthday
        overdraft_allowed:
          type: boolean
          description: Indicates whether overdraft is authorized for the user.
          example: false
        account_number:
          type: string
          description: User's unique account number  

    balanceUtils:
      type: object
      properties:        
        main_balance:
          type: number
          format: double
          description: Main account balance at balance date.
        loan_amount:
          type: number
          format: double
          description: Amount of loan associated with the account on the balance date.
        loan_interest:
          type: number
          format: double
          description: Interest on the loan associated with the account at the balance date.

    updateBalance:
      allOf:
        - $ref: "#/components/schemas/CommonId"
        - $ref: "#/components/schemas/balanceUtils"

    postBalance:
      allOf:
        - $ref: "#/components/schemas/balanceUtils"
      type: object
      properties:
        id_account:
          type: integer
          format: int64
          description: Account ID associated with this balance entry
      required:
        - id_account
    Balance:
      allOf:
        - $ref: "#/components/schemas/CommonId"
        - $ref: "#/components/schemas/balanceUtils"
      type: object  
      properties:
        id_account:
          type: integer
          format: int64
          description: Account ID associated with this balance entry
        balance_date:
          type: string
          format: date
          description: Date of balance entry

    categoryType:
      type: string
      enum:
        - EXPENSE
        - INCOME
    updateCategory:
      allOf:
        - $ref: "#/components/schemas/CommonId"
      type: object
      properties:
        comment:
          type: string
          format: text      

    crudCategory:
      type: object
      properties:
        name:
          type: string
        categoryType:
          $ref: "#/components/schemas/categoryType"
        comment:
          type: string
          format: text
        idTransfer:
          type: integer
    category:
      allOf:
        - $ref: "#/components/schemas/CommonId"
        - $ref: "#/components/schemas/crudCategory"

    transactionType:
      type: string
      enum:
        - CREDIT
        - DEBIT 
    crudTransaction:
      type: object
      properties:
        id_account:
          type: integer
          format: int64
        transaction_datetime:
          type: string 
          format: datetime
        amount:
          type: integer
          format: double
        type:
          $ref: '#/components/schemas/transactionType'

    Transaction:
      allOf:
        - $ref: '#/components/schemas/CommonId'
        - $ref: '#/components/schemas/crudTransaction'

    transferStatus:
      type: string 
      enum:
        - CANCELLED
        - PENDING
        - COMPLETED      
    updateTransfer:
      allOf:
        - $ref: '#/components/schemas/CommonId'
      type: object  
      properties: 
        status:
          $ref: '#/components/schemas/transferStatus'
        
    crudTransfer:
      type: object
      properties:
        id_account_source:
          type: integer
          format: int64      
        destination_account_number:
          type: string
        transfer_datetime:
          type: string 
          format: datetime
        value_datetime:
          type: string 
          format: datetime
        amount:
          type: integer
          format: double
        reference:
          type: string
        is_external_bank:
          type: boolean
    Transfer:
      allOf:
        - $ref: '#/components/schemas/CommonId'
        - $ref: '#/components/schemas/crudTransfer'  
      type: object  
      properties: 
        status:
          $ref: '#/components/schemas/transferStatus'
    AccountStatement:
      type: object
      properties:
        date:
          type: string
          format: date
        reference:
          type: string   
        reason:
          type: string
        credit_amount:
          type: number
          format: double
        debit_amount:
          type: number
          format: double
        balance:
          type: number
          format: double  
    StartAndEndDate:
     type: object
     properties:
       start_date:
         type: string
         format: date      
       end_date:
         type: string
         format: date  
    SumReceiptsExpenses:
      type: object
      properties:
       period:
         type: string
         format: datetime
       total_receipts:
        type: number
        format: double
       total_expenses:
        type: number
        format: double  
    SumAmountByCategory:
      type: object
      properties:
        category:
          type: string    
        period:
          type: string
          format: datetime
        total_amount:
          type: number
          format: double    
    AmountByCategoryParams:
      allOf:
          - $ref: '#/components/schemas/StartAndEndDate'  
      type: object
      properties:
        type_category:
          $ref: '#/components/schemas/categoryType' 
    ReceiptsAndExpensesParams:
      allOf:
          - $ref: '#/components/schemas/StartAndEndDate'
      type: object
      properties:
        interval_type:
          type: string
          enum:
            - month
            - day    
          default: month  
             
               


    ### RESPONSE MAIN LAYOUT
    ResponseStatus:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      example:
        code: 200
        message: OK

    ResponseBody:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/ResponseStatus"
        body:
          type: object

    ### EXCEPTIONS
    BadRequestException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        message: BadRequest
        code: 400
        body: {}

    NotAuthorizedException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 401
        message: Not authorized
        body: {}

    ForbiddenException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 403
        message: Forbidden
        body: {}

    ResourceNotFoundException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 404
        message: ResourceNotFound
        body: {}

    TooManyRequestsException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 429
        message: TooManyRequests
        body: {}

    InternalServerException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 500
        type: InternalServerError
        body: {}
