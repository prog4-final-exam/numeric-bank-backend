openapi: 3.0.3
info:
  title: Numeric bank api specs
  description: This document specify the endpoints we'll use for our numeric bank web application
  version: 3.2.8

servers:
  - url: "http://localhost:8080"
tags:
  - name: Account
  - name: Transaction
  - name: Balance
  - name: Transfer_category
  - name: Transfer

paths:
  ### Account endpoint
  /accounts:
    get:
      tags:
        - Account
      summary: get list of account
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Account
      summary: create new account
      requestBody:
        $ref: "#/components/requestBodies/PostAccountBody"
      responses:
        200:
          description: the created account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    put:
      tags:
        - Account
      summary: update an account
      requestBody:
        $ref: "#/components/requestBodies/UpdateAccountBody"
      responses:
        200:
          description: the updated account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /accounts/{id}:
    get:
      tags:
        - Account
      summary: get account by his id
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the corresponding account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - Account
      summary: delete an account
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the deleted account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/account"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  ### Balance endpoint
  /balances:
    get:
      tags:
        - Balance
      summary: get list of balance associated with account
      responses:
        "200":
          description: display the list of the balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/crudBalance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    post:
      tags:
        - Balance
      summary: create new balance
      requestBody:
        $ref: "#/components/requestBodies/BalanceBody"
      responses:
        200:
          description: the created account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    put:
      tags:
        - Balance
      summary: update a balance
      requestBody:
        $ref: "#/components/requestBodies/BalanceBody"
      responses:
        "200":
          description: the updated balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /balances/account/{id}:
    get:
      tags:
        - Balance
      summary: get balance by the account_id
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the corresponding balance by the account_id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/crudBalance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /balances/{id}:
    get:
      tags:
        - Balance
      summary: get balance by his id
      parameters:
        - $ref: "#/components/parameters/BalanceId"
      responses:
        200:
          description: the corresponding balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - Balance
      summary: delete a balance
      parameters:
        - $ref: "#/components/parameters/BalanceId"
      responses:
        200:
          description: the deleted balance
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Balance"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

  /transfers/categories:
    get:
      tags:
        - Transfer_category
      summary: get list of transfer's category
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Transfer_category
      summary: create new transfer's category
      requestBody:
        $ref: "#/components/requestBodies/TransferCategoryBody"
      responses:
        200:
          description: the created transfer's category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    put:
      tags:
        - Transfer_category
      summary: update an existent transfer's category
      requestBody:
        $ref: "#/components/requestBodies/TransferCategoryBody"
      responses:
        200:
          description: the updated transfer's category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
  /transfers/categories/{id}:
    get:
      tags:
        - Transfer_category
      summary: get transfer's category by his id
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the corresponding account
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - Transfer_category
      summary: delete a transfer's category
      parameters:
        - $ref: "#/components/parameters/AccountId"
      responses:
        200:
          description: the deleted transfer's category
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/category"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"


  /transactions:
    get:
      tags:
        - Transaction
      summary: get list of Transaction
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Transaction
      summary: create new transaction
      requestBody:
        $ref: "#/components/requestBodies/TransactionBody"
      responses:
        200:
          description: the created transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"      

  /transactions/{id}:
    get:
      tags:
        - Transaction
      summary: get Transaction by his id
      parameters:
        - $ref: "#/components/parameters/TransactionId"
      responses:
        200:
          description: the corresponding Transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 
    put:
      tags:
        - Transaction
      summary: update an existent transaction
      parameters:
        - $ref: "#/components/parameters/TransactionId"
      requestBody:
        $ref: "#/components/requestBodies/TransactionBody"
      responses:
        200:
          description: the updated transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Transaction
      summary: delete a transaction
      parameters:
        - $ref: "#/components/parameters/TransactionId"
      responses:
        200:
          description: the deleted Transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transaction"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 

  /transfers:
    get:
      tags:
        - Transfer
      summary: get list of Transfer
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"

    post:
      tags:
        - Transfer
      summary: create new transfer
      requestBody:
        $ref: "#/components/requestBodies/TransferBody"
      responses:
        200:
          description: the created transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"      

  /transfers/{id}:
    get:
      tags:
        - Transfer
      summary: get Transfer by his id
      parameters:
        - $ref: "#/components/parameters/TransferId"
      responses:
        200:
          description: the corresponding Transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500" 
    put:
      tags:
        - Transfer
      summary: update an existent transfer
      parameters:
        - $ref: "#/components/parameters/TransferId"
      requestBody:
        $ref: "#/components/requestBodies/TransferBody"
      responses:
        200:
          description: the updated transaction
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"
    delete:
      tags:
        - Transfer
      summary: delete a transfer
      parameters:
        - $ref: "#/components/parameters/TransferId"
      responses:
        200:
          description: the deleted Transfer
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseBody"
                properties:
                  body:
                    $ref: "#/components/schemas/Transfer"
        "400":
          $ref: "#/components/responses/400"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "429":
          $ref: "#/components/responses/429"
        "500":
          $ref: "#/components/responses/500"                           

components:
  ### requestBodies components
  requestBodies:
    PostAccountBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/postAccount"
    UpdateAccountBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/updateAccount"
    BalanceBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/crudBalance"
    TransferCategoryBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/crudCategory"

    TransactionBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/crudTransaction" 

    TransferBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/crudTransfer"               

  ### parameters components
  parameters:
    AccountId:
      name: id
      in: path
      required: true
      schema:
        type: integer
    BalanceId:
      name: id
      in: path
      required: true
      schema:
        type: integer
    TransactionId:
      name: id
      in: path
      required: true
      schema:
        type: integer

    TransferId:
      name: id
      in: path
      required: true
      schema:
        type: integer        


  ### responses component
  responses:
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestException"
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ForbiddenException"
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceNotFoundException"
    429:
      description: Too many Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TooManyRequestsException"
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InternalServerException"

  ### schemas components
  schemas:
    updateAccount:
      type: object
      properties:
        firstname:
          type: string
          description: User's firstname
        lastname:
          type: string
          description: User's lastname
        birthdate:
          type: string
          format: date
          description: User's birthday
        net_monthly_pay:
          type: number
          format: double
          description: User's net month salary
      required:
        - firstname
        - lastname
        - birthdate
        - net_monthly_pay

    postAccount:
      allOf:
        - $ref: "#/components/schemas/updateAccount"
      type: object
      properties:
        overdraft_allowed:
          type: boolean
          description: Indicates whether overdraft is authorized for the user.
          example: false
        account_number:
          type: string
          description: User's unique account number
      required:
        - overdraft_allowed
        - bank_name
        - account_number

    account:
      allOf:
        - $ref: "#/components/schemas/updateAccount"
        - $ref: "#/components/schemas/postAccount"
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: User's unique ID
      required:
        - id
        - crudAccount

    crudBalance:
      type: object
      properties:
        id_account:
          type: integer
          format: int64
          description: Account ID associated with this balance entry
        main_balance:
          type: number
          format: double
          description: Main account balance at balance date.
        loan_amount:
          type: number
          format: double
          description: Amount of loan associated with the account on the balance date.
        loan_interest:
          type: number
          format: double
          description: Interest on the loan associated with the account at the balance date.
      required:
        - id_account
        - main_balance
    Balance:
      allOf:
        - $ref: "#/components/schemas/crudBalance"
      properties:
        id:
          type: integer
          format: int64
          description: Unique ID of the balance entry
        balance_date:
          type: string
          format: date
          description: Date of balance entry

    categoryType:
      type: string
      enum:
        - EXPENSE
        - INCOME

    crudCategory:
      type: object
      properties:
        name:
          type: string
        categoryType:
          $ref: "#/components/schemas/categoryType"
        comment:
          type: string
          format: text
        idTransfer:
          type: integer
    category:
      allOf:
        - $ref: "#/components/schemas/crudCategory"
      type: object
      properties:
        id:
          type: integer
          format: int64

    transactionType:
      type: string
      enum:
        - CREDIT
        - DEBIT 
    crudTransaction:
      type: object
      properties:
        id_account:
          type: integer
          format: int64
        transaction_datetime:
          type: string 
          format: datetime
        amount:
          type: integer
          format: double
        type:
          $ref: '#/components/schemas/transactionType'

    Transaction:
      allOf:
        - $ref: '#/components/schemas/crudTransaction'
      type: object
      properties:
        id:
          type: integer
          format: int64

    transferStatus:
      type: string 
      enum:
        - CANCELLED
        - PENDING
        - COMPLETED      

    crudTransfer:
      type: object
      properties:
        id_account_source:
          type: integer
          format: int64      
        destination_account_number:
          type: string
        transfer_datetime:
          type: string 
          format: datetime
        value_datetime:
          type: string 
          format: datetime
        amount:
          type: integer
          format: double
        status:
          $ref: '#/components/schemas/transferStatus' 
        reference:
          type: string
        is_external_bank:
          type: boolean
    Transfer:
      allOf:
        - $ref: '#/components/schemas/crudTransfer'
      type: object
      properties:
        id:
          type: integer
          format: int64                                           

    ### RESPONSE MAIN LAYOUT
    ResponseStatus:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      example:
        code: 200
        message: OK

    ResponseBody:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/ResponseStatus"
        body:
          type: object

    ### EXCEPTIONS
    BadRequestException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        message: BadRequest
        code: 400
        body: {}

    NotAuthorizedException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 401
        message: Not authorized
        body: {}

    ForbiddenException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 403
        message: Forbidden
        body: {}

    ResourceNotFoundException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 404
        message: ResourceNotFound
        body: {}

    TooManyRequestsException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 429
        message: TooManyRequests
        body: {}

    InternalServerException:
      allOf:
        - $ref: "#/components/schemas/ResponseBody"
      example:
        code: 500
        type: InternalServerError
        body: {}
